import re

def escapeName(name):
    name = name.strip()
    
    if name == "*":
        return "ALL"
    
    else:    
        name = name.replace("^", "not-")
        name = name.replace("*", "-")
        name = re.sub(r"[^a-zA-Z0-9\-\.]+", "_", name)
        return name

def createOutputNulls(kwargs):
    node = kwargs['node']
    
    conns = node.outputConnections()
    
    coloredGeo = node.node('COLORED_PIECE').geometry()
    
    for i in xrange(4):
        index = i + 1
        pattern = node.parm('pattern%d' % index).evalAsString()
        
        name = "PIECE_%s" % escapeName(pattern)
        
        if not pattern:
            continue
        
        # Create an output null
        comment = "Piece%d" % index
            
        existingConns = filter(lambda c: c.outputNode().comment() == comment, conns)
        if len(existingConns) > 0:
            out = existingConns[0].outputNode()
        else:    
            out = node.createOutputNode('null')
            out.setComment(comment)
            out.setInput(0, node, i)
            
        out.setName(name, unique_name=True)
        
        # Set color
        color = hou.Color(128, 128, 128)
        
        prims = coloredGeo.globPrims("@__matched_pattern__==%d" % index)
        
        if len(prims) > 0:
            color = hou.Color(prims[0].attribValue("Cd"))
        
        out.setColor(color)
        
        # Insert the null
        for conn in [c for c in conns if c.outputIndex() == i and c.outputNode() != out]:
            inputIndex = conn.inputIndex()
            conn.outputNode().setInput(inputIndex, out)
        
    
        
    
    
    
    